datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  role      UserRole @default(USER)
  events    Event[]
  tickets   Ticket[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  USER
  ADMIN
}

model Event {
  id              String         @id @default(uuid())
  title           String
  description     String
  startDate       DateTime
  endDate         DateTime
  location        String
  organizer       User           @relation(fields: [organizerId], references: [id])
  organizerId     String
  tickets         Ticket[]
  theme           Theme?         @relation(fields: [themeId], references: [id])
  themeId         String?
  decor           Decor?         @relation(fields: [decorId], references: [id])
  decorId         String?
  catering        Catering?      @relation(fields: [cateringId], references: [id])
  cateringId      String?
  entertainment   Entertainment? @relation(fields: [entertainmentId], references: [id])
  entertainmentId String?
  accommodation   Accommodation? @relation(fields: [accommodationId], references: [id])
  accommodationId String?
  status          EventStatus    @default(DRAFT)
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

enum EventStatus {
  DRAFT
  SCHEDULED
  CANCELLED
  COMPLETED
}

model Ticket {
  id        String   @id @default(uuid())
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Theme {
  id          String   @id @default(uuid())
  name        String
  description String?
  events      Event[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Decor {
  id          String   @id @default(uuid())
  name        String
  description String?
  events      Event[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Catering {
  id          String   @id @default(uuid())
  name        String
  description String?
  menu        String?
  events      Event[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Entertainment {
  id          String   @id @default(uuid())
  name        String
  description String?
  type        String?
  events      Event[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Accommodation {
  id          String   @id @default(uuid())
  name        String
  description String?
  address     String
  events      Event[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
